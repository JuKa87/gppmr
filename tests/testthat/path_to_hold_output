sample.interval=20000
"cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"isTRUE" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"<Anonymous>" "browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"browser" "eval" "eval" ".rs.breakOnError" "<Anonymous>" "as_StanData.longData" "as_StanData" "gppModel" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"as.vector" "setdiff" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"format.default" "format" "format.fun" "paste" "nchar" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"::" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"pmatch" "match.arg" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"FUN" "lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"getExportedValue" "::" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsHelp" "<Anonymous>" 
"constantFoldCall" "constantFold" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" "<Anonymous>" 
"length" "substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsHelp" "<Anonymous>" 
"aperm.default" "aperm" "apply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"lazyLoadDBfetch" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"lapply" "sapply" "RdTags" "get_link" "writeLink" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeLR" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"file" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"file.exists" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeLR" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"close.connection" "close" "readRDS" "FUN" "lapply" "find.package" "index.search" "help" "eval" "eval" "?" 
"close.connection" "close" "readRDS" "index.search" "help" "eval" "eval" "?" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"as.factor" "split.default" "split" "Ops.numeric_version" ">=" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
