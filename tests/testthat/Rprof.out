sample.interval=20000
"dots.or.missing" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "extractParamsPreds" "parseFormula" "parseModel" "gppModel" "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" "eval" "eval" "source_file" "force" "with_reporter" "FUN" "lapply" "force" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
"checkSkipLoopCntxt" "checkSkipLoopCntxtList" "checkSkipLoopCntxt" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "createStanFormula" "parseFormula" "parseModel" "gppModel" "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" "eval" "eval" "source_file" "force" "with_reporter" "FUN" "lapply" "force" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
"cb$putcode" "h" "trySetterInline" "cmpSetterCall" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "test_code" "test_that" "eval" "eval" "source_file" "force" "with_reporter" "FUN" "lapply" "force" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
"proc.time" "x[[method]]" "FUN" "lapply" "o_apply" "<Anonymous>" "test_code" "test_that" "eval" "eval" "source_file" "force" "with_reporter" "FUN" "lapply" "force" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "as_StanData.longData" "as_StanData" "gppModel" "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" "eval" "eval" "source_file" "force" "with_reporter" "FUN" "lapply" "force" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
"file" "readChar" "toStan" "gppModel" "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" "eval" "eval" "source_file" "force" "with_reporter" "FUN" "lapply" "force" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
"gregexpr" "extractParamsPreds" "parseFormula" "parseModel" "gppModel" "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" "eval" "eval" "source_file" "force" "with_reporter" "FUN" "lapply" "force" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
"%in%" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "private$cat_reports" "reporter$end_reporter" "with_reporter" "test_files" "<Anonymous>" "do.call" "force" "withr::with_envvar" "devtools::test" 
